name: HyperCache CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.23.2'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Build binary
      run: |
        mkdir -p bin
        go build -v -o bin/hypercache ./cmd/hypercache

    - name: Test binary execution
      run: |
        chmod +x bin/hypercache
        timeout 10s ./bin/hypercache --help || true

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: hypercache-binary
        path: bin/hypercache

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [build]
    if: always()

    steps:
    - name: Notify success
      if: ${{ needs.build.result == 'success' }}
      run: |
        echo "üéâ HyperCache CI pipeline completed successfully!"
        echo "‚úÖ Build successful"

    - name: Notify failure
      if: ${{ needs.build.result == 'failure' }}
      run: |
        echo "‚ùå HyperCache CI pipeline failed!"
        echo "Please check the logs for details."
        exit 1
